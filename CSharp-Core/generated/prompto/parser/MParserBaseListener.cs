//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace prompto.parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MParserBaseListener : IMParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.enum_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_category_declaration([NotNull] MParser.Enum_category_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.enum_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_category_declaration([NotNull] MParser.Enum_category_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.enum_native_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_native_declaration([NotNull] MParser.Enum_native_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.enum_native_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_native_declaration([NotNull] MParser.Enum_native_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_symbol([NotNull] MParser.Native_symbolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_symbol([NotNull] MParser.Native_symbolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.category_symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCategory_symbol([NotNull] MParser.Category_symbolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.category_symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCategory_symbol([NotNull] MParser.Category_symbolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.attribute_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_declaration([NotNull] MParser.Attribute_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.attribute_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_declaration([NotNull] MParser.Attribute_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.index_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_clause([NotNull] MParser.Index_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.index_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_clause([NotNull] MParser.Index_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.concrete_widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcrete_widget_declaration([NotNull] MParser.Concrete_widget_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.concrete_widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcrete_widget_declaration([NotNull] MParser.Concrete_widget_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_widget_declaration([NotNull] MParser.Native_widget_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_widget_declaration([NotNull] MParser.Native_widget_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.concrete_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcrete_category_declaration([NotNull] MParser.Concrete_category_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.concrete_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcrete_category_declaration([NotNull] MParser.Concrete_category_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.singleton_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleton_category_declaration([NotNull] MParser.Singleton_category_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.singleton_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleton_category_declaration([NotNull] MParser.Singleton_category_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.derived_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerived_list([NotNull] MParser.Derived_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.derived_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerived_list([NotNull] MParser.Derived_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.operator_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator_method_declaration([NotNull] MParser.Operator_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.operator_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator_method_declaration([NotNull] MParser.Operator_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.setter_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetter_method_declaration([NotNull] MParser.Setter_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.setter_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetter_method_declaration([NotNull] MParser.Setter_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_setter_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_setter_declaration([NotNull] MParser.Native_setter_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_setter_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_setter_declaration([NotNull] MParser.Native_setter_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.getter_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetter_method_declaration([NotNull] MParser.Getter_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.getter_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetter_method_declaration([NotNull] MParser.Getter_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_getter_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_getter_declaration([NotNull] MParser.Native_getter_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_getter_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_getter_declaration([NotNull] MParser.Native_getter_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_category_declaration([NotNull] MParser.Native_category_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_category_declaration([NotNull] MParser.Native_category_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_resource_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_resource_declaration([NotNull] MParser.Native_resource_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_resource_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_resource_declaration([NotNull] MParser.Native_resource_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_category_bindings"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_category_bindings([NotNull] MParser.Native_category_bindingsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_category_bindings"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_category_bindings([NotNull] MParser.Native_category_bindingsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NativeCategoryBindingListItem</c>
	/// labeled alternative in <see cref="MParser.native_category_binding_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeCategoryBindingListItem([NotNull] MParser.NativeCategoryBindingListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NativeCategoryBindingListItem</c>
	/// labeled alternative in <see cref="MParser.native_category_binding_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeCategoryBindingListItem([NotNull] MParser.NativeCategoryBindingListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NativeCategoryBindingList</c>
	/// labeled alternative in <see cref="MParser.native_category_binding_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeCategoryBindingList([NotNull] MParser.NativeCategoryBindingListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NativeCategoryBindingList</c>
	/// labeled alternative in <see cref="MParser.native_category_binding_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeCategoryBindingList([NotNull] MParser.NativeCategoryBindingListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.abstract_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstract_method_declaration([NotNull] MParser.Abstract_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.abstract_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstract_method_declaration([NotNull] MParser.Abstract_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.concrete_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcrete_method_declaration([NotNull] MParser.Concrete_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.concrete_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcrete_method_declaration([NotNull] MParser.Concrete_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_method_declaration([NotNull] MParser.Native_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_method_declaration([NotNull] MParser.Native_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.test_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTest_method_declaration([NotNull] MParser.Test_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.test_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTest_method_declaration([NotNull] MParser.Test_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssertion([NotNull] MParser.AssertionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssertion([NotNull] MParser.AssertionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.typed_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTyped_argument([NotNull] MParser.Typed_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.typed_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTyped_argument([NotNull] MParser.Typed_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MethodCallStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallStatement([NotNull] MParser.MethodCallStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodCallStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallStatement([NotNull] MParser.MethodCallStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignInstanceStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignInstanceStatement([NotNull] MParser.AssignInstanceStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignInstanceStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignInstanceStatement([NotNull] MParser.AssignInstanceStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignTupleStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignTupleStatement([NotNull] MParser.AssignTupleStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignTupleStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignTupleStatement([NotNull] MParser.AssignTupleStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StoreStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStoreStatement([NotNull] MParser.StoreStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StoreStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStoreStatement([NotNull] MParser.StoreStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FetchStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFetchStatement([NotNull] MParser.FetchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FetchStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFetchStatement([NotNull] MParser.FetchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReadStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadStatement([NotNull] MParser.ReadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReadStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadStatement([NotNull] MParser.ReadStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FlushStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlushStatement([NotNull] MParser.FlushStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FlushStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlushStatement([NotNull] MParser.FlushStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] MParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] MParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] MParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] MParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] MParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] MParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] MParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] MParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForEachStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForEachStatement([NotNull] MParser.ForEachStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForEachStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForEachStatement([NotNull] MParser.ForEachStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] MParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] MParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DoWhileStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoWhileStatement([NotNull] MParser.DoWhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DoWhileStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoWhileStatement([NotNull] MParser.DoWhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RaiseStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaiseStatement([NotNull] MParser.RaiseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RaiseStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaiseStatement([NotNull] MParser.RaiseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TryStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTryStatement([NotNull] MParser.TryStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TryStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTryStatement([NotNull] MParser.TryStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WriteStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStatement([NotNull] MParser.WriteStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WriteStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStatement([NotNull] MParser.WriteStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WithResourceStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithResourceStatement([NotNull] MParser.WithResourceStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WithResourceStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithResourceStatement([NotNull] MParser.WithResourceStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WithSingletonStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithSingletonStatement([NotNull] MParser.WithSingletonStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WithSingletonStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithSingletonStatement([NotNull] MParser.WithSingletonStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ClosureStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClosureStatement([NotNull] MParser.ClosureStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ClosureStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClosureStatement([NotNull] MParser.ClosureStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CommentStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommentStatement([NotNull] MParser.CommentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CommentStatement</c>
	/// labeled alternative in <see cref="MParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommentStatement([NotNull] MParser.CommentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.flush_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlush_statement([NotNull] MParser.Flush_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.flush_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlush_statement([NotNull] MParser.Flush_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.store_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStore_statement([NotNull] MParser.Store_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.store_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStore_statement([NotNull] MParser.Store_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.method_call_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_call_expression([NotNull] MParser.Method_call_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.method_call_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_call_expression([NotNull] MParser.Method_call_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.method_call_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_call_statement([NotNull] MParser.Method_call_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.method_call_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_call_statement([NotNull] MParser.Method_call_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.with_resource_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWith_resource_statement([NotNull] MParser.With_resource_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.with_resource_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWith_resource_statement([NotNull] MParser.With_resource_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.with_singleton_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWith_singleton_statement([NotNull] MParser.With_singleton_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.with_singleton_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWith_singleton_statement([NotNull] MParser.With_singleton_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_statement([NotNull] MParser.Switch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_statement([NotNull] MParser.Switch_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AtomicSwitchCase</c>
	/// labeled alternative in <see cref="MParser.switch_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomicSwitchCase([NotNull] MParser.AtomicSwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomicSwitchCase</c>
	/// labeled alternative in <see cref="MParser.switch_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomicSwitchCase([NotNull] MParser.AtomicSwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CollectionSwitchCase</c>
	/// labeled alternative in <see cref="MParser.switch_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionSwitchCase([NotNull] MParser.CollectionSwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CollectionSwitchCase</c>
	/// labeled alternative in <see cref="MParser.switch_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionSwitchCase([NotNull] MParser.CollectionSwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.for_each_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_each_statement([NotNull] MParser.For_each_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.for_each_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_each_statement([NotNull] MParser.For_each_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.do_while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_while_statement([NotNull] MParser.Do_while_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.do_while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_while_statement([NotNull] MParser.Do_while_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_statement([NotNull] MParser.While_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_statement([NotNull] MParser.While_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] MParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] MParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ElseIfStatementList</c>
	/// labeled alternative in <see cref="MParser.else_if_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatementList([NotNull] MParser.ElseIfStatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ElseIfStatementList</c>
	/// labeled alternative in <see cref="MParser.else_if_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatementList([NotNull] MParser.ElseIfStatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ElseIfStatementListItem</c>
	/// labeled alternative in <see cref="MParser.else_if_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatementListItem([NotNull] MParser.ElseIfStatementListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ElseIfStatementListItem</c>
	/// labeled alternative in <see cref="MParser.else_if_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatementListItem([NotNull] MParser.ElseIfStatementListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.raise_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaise_statement([NotNull] MParser.Raise_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.raise_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaise_statement([NotNull] MParser.Raise_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.try_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTry_statement([NotNull] MParser.Try_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.try_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTry_statement([NotNull] MParser.Try_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CatchAtomicStatement</c>
	/// labeled alternative in <see cref="MParser.catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatchAtomicStatement([NotNull] MParser.CatchAtomicStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CatchAtomicStatement</c>
	/// labeled alternative in <see cref="MParser.catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatchAtomicStatement([NotNull] MParser.CatchAtomicStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CatchCollectionStatement</c>
	/// labeled alternative in <see cref="MParser.catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatchCollectionStatement([NotNull] MParser.CatchCollectionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CatchCollectionStatement</c>
	/// labeled alternative in <see cref="MParser.catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatchCollectionStatement([NotNull] MParser.CatchCollectionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.break_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreak_statement([NotNull] MParser.Break_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.break_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreak_statement([NotNull] MParser.Break_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] MParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] MParser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IntDivideExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntDivideExpression([NotNull] MParser.IntDivideExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntDivideExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntDivideExpression([NotNull] MParser.IntDivideExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>HasAnyExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHasAnyExpression([NotNull] MParser.HasAnyExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>HasAnyExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHasAnyExpression([NotNull] MParser.HasAnyExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>HasExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHasExpression([NotNull] MParser.HasExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>HasExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHasExpression([NotNull] MParser.HasExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTernaryExpression([NotNull] MParser.TernaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTernaryExpression([NotNull] MParser.TernaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInExpression([NotNull] MParser.InExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInExpression([NotNull] MParser.InExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxExpression([NotNull] MParser.JsxExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxExpression([NotNull] MParser.JsxExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] MParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] MParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareExpression([NotNull] MParser.CompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareExpression([NotNull] MParser.CompareExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OrExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpression([NotNull] MParser.OrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OrExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpression([NotNull] MParser.OrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CodeExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeExpression([NotNull] MParser.CodeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CodeExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeExpression([NotNull] MParser.CodeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AndExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] MParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AndExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] MParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrowExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowExpression([NotNull] MParser.ArrowExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrowExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowExpression([NotNull] MParser.ArrowExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ContainsExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContainsExpression([NotNull] MParser.ContainsExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ContainsExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContainsExpression([NotNull] MParser.ContainsExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FilteredListExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilteredListExpression([NotNull] MParser.FilteredListExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FilteredListExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilteredListExpression([NotNull] MParser.FilteredListExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeExpression([NotNull] MParser.TypeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeExpression([NotNull] MParser.TypeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplyExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyExpression([NotNull] MParser.MultiplyExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplyExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyExpression([NotNull] MParser.MultiplyExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExecuteExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExecuteExpression([NotNull] MParser.ExecuteExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExecuteExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExecuteExpression([NotNull] MParser.ExecuteExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IteratorExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIteratorExpression([NotNull] MParser.IteratorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IteratorExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIteratorExpression([NotNull] MParser.IteratorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DivideExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivideExpression([NotNull] MParser.DivideExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DivideExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivideExpression([NotNull] MParser.DivideExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IsExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsExpression([NotNull] MParser.IsExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IsExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsExpression([NotNull] MParser.IsExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MinusExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinusExpression([NotNull] MParser.MinusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MinusExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinusExpression([NotNull] MParser.MinusExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpression([NotNull] MParser.AddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpression([NotNull] MParser.AddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>HasAllExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHasAllExpression([NotNull] MParser.HasAllExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>HasAllExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHasAllExpression([NotNull] MParser.HasAllExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InstanceExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceExpression([NotNull] MParser.InstanceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InstanceExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceExpression([NotNull] MParser.InstanceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MutableInstanceExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutableInstanceExpression([NotNull] MParser.MutableInstanceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MutableInstanceExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutableInstanceExpression([NotNull] MParser.MutableInstanceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CssExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCssExpression([NotNull] MParser.CssExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CssExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCssExpression([NotNull] MParser.CssExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpression([NotNull] MParser.CastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpression([NotNull] MParser.CastExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ModuloExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuloExpression([NotNull] MParser.ModuloExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ModuloExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuloExpression([NotNull] MParser.ModuloExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EqualsExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualsExpression([NotNull] MParser.EqualsExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EqualsExpression</c>
	/// labeled alternative in <see cref="MParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualsExpression([NotNull] MParser.EqualsExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrowFilterExpression</c>
	/// labeled alternative in <see cref="MParser.filter_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowFilterExpression([NotNull] MParser.ArrowFilterExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrowFilterExpression</c>
	/// labeled alternative in <see cref="MParser.filter_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowFilterExpression([NotNull] MParser.ArrowFilterExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExplicitFilterExpression</c>
	/// labeled alternative in <see cref="MParser.filter_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitFilterExpression([NotNull] MParser.ExplicitFilterExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExplicitFilterExpression</c>
	/// labeled alternative in <see cref="MParser.filter_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitFilterExpression([NotNull] MParser.ExplicitFilterExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OtherFilterExpression</c>
	/// labeled alternative in <see cref="MParser.filter_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOtherFilterExpression([NotNull] MParser.OtherFilterExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OtherFilterExpression</c>
	/// labeled alternative in <see cref="MParser.filter_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOtherFilterExpression([NotNull] MParser.OtherFilterExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.type_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_expression([NotNull] MParser.Type_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.type_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_expression([NotNull] MParser.Type_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MethodExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodExpression([NotNull] MParser.MethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodExpression([NotNull] MParser.MethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpression([NotNull] MParser.ParenthesisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpression([NotNull] MParser.ParenthesisExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] MParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] MParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] MParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] MParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ThisExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisExpression([NotNull] MParser.ThisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ThisExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisExpression([NotNull] MParser.ThisExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SuperExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuperExpression([NotNull] MParser.SuperExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SuperExpression</c>
	/// labeled alternative in <see cref="MParser.selectable_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuperExpression([NotNull] MParser.SuperExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SelectorExpression</c>
	/// labeled alternative in <see cref="MParser.instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectorExpression([NotNull] MParser.SelectorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SelectorExpression</c>
	/// labeled alternative in <see cref="MParser.instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectorExpression([NotNull] MParser.SelectorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SelectableExpression</c>
	/// labeled alternative in <see cref="MParser.instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectableExpression([NotNull] MParser.SelectableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SelectableExpression</c>
	/// labeled alternative in <see cref="MParser.instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectableExpression([NotNull] MParser.SelectableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MutableSelectableExpression</c>
	/// labeled alternative in <see cref="MParser.mutable_instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutableSelectableExpression([NotNull] MParser.MutableSelectableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MutableSelectableExpression</c>
	/// labeled alternative in <see cref="MParser.mutable_instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutableSelectableExpression([NotNull] MParser.MutableSelectableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MutableSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.mutable_instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutableSelectorExpression([NotNull] MParser.MutableSelectorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MutableSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.mutable_instance_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutableSelectorExpression([NotNull] MParser.MutableSelectorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_expression([NotNull] MParser.Method_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_expression([NotNull] MParser.Method_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MemberSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberSelector([NotNull] MParser.MemberSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MemberSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberSelector([NotNull] MParser.MemberSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MethodSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodSelector([NotNull] MParser.MethodSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodSelector([NotNull] MParser.MethodSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SliceSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceSelector([NotNull] MParser.SliceSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SliceSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceSelector([NotNull] MParser.SliceSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ItemSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItemSelector([NotNull] MParser.ItemSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ItemSelector</c>
	/// labeled alternative in <see cref="MParser.instance_selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItemSelector([NotNull] MParser.ItemSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.blob_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlob_expression([NotNull] MParser.Blob_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.blob_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlob_expression([NotNull] MParser.Blob_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.document_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocument_expression([NotNull] MParser.Document_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.document_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocument_expression([NotNull] MParser.Document_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstructorFrom</c>
	/// labeled alternative in <see cref="MParser.constructor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorFrom([NotNull] MParser.ConstructorFromContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstructorFrom</c>
	/// labeled alternative in <see cref="MParser.constructor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorFrom([NotNull] MParser.ConstructorFromContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstructorNoFrom</c>
	/// labeled alternative in <see cref="MParser.constructor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorNoFrom([NotNull] MParser.ConstructorNoFromContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstructorNoFrom</c>
	/// labeled alternative in <see cref="MParser.constructor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorNoFrom([NotNull] MParser.ConstructorNoFromContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.copy_from"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCopy_from([NotNull] MParser.Copy_fromContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.copy_from"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCopy_from([NotNull] MParser.Copy_fromContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionAssignmentList</c>
	/// labeled alternative in <see cref="MParser.argument_assignment_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionAssignmentList([NotNull] MParser.ExpressionAssignmentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionAssignmentList</c>
	/// labeled alternative in <see cref="MParser.argument_assignment_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionAssignmentList([NotNull] MParser.ExpressionAssignmentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArgumentAssignmentList</c>
	/// labeled alternative in <see cref="MParser.argument_assignment_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentAssignmentList([NotNull] MParser.ArgumentAssignmentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArgumentAssignmentList</c>
	/// labeled alternative in <see cref="MParser.argument_assignment_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentAssignmentList([NotNull] MParser.ArgumentAssignmentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArgumentAssignmentListItem</c>
	/// labeled alternative in <see cref="MParser.argument_assignment_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentAssignmentListItem([NotNull] MParser.ArgumentAssignmentListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArgumentAssignmentListItem</c>
	/// labeled alternative in <see cref="MParser.argument_assignment_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentAssignmentListItem([NotNull] MParser.ArgumentAssignmentListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.argument_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_assignment([NotNull] MParser.Argument_assignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.argument_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_assignment([NotNull] MParser.Argument_assignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.write_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWrite_statement([NotNull] MParser.Write_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.write_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWrite_statement([NotNull] MParser.Write_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.filtered_list_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFiltered_list_suffix([NotNull] MParser.Filtered_list_suffixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.filtered_list_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFiltered_list_suffix([NotNull] MParser.Filtered_list_suffixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FetchOne</c>
	/// labeled alternative in <see cref="MParser.fetch_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFetchOne([NotNull] MParser.FetchOneContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FetchOne</c>
	/// labeled alternative in <see cref="MParser.fetch_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFetchOne([NotNull] MParser.FetchOneContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FetchMany</c>
	/// labeled alternative in <see cref="MParser.fetch_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFetchMany([NotNull] MParser.FetchManyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FetchMany</c>
	/// labeled alternative in <see cref="MParser.fetch_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFetchMany([NotNull] MParser.FetchManyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FetchOneAsync</c>
	/// labeled alternative in <see cref="MParser.fetch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFetchOneAsync([NotNull] MParser.FetchOneAsyncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FetchOneAsync</c>
	/// labeled alternative in <see cref="MParser.fetch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFetchOneAsync([NotNull] MParser.FetchOneAsyncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FetchManyAsync</c>
	/// labeled alternative in <see cref="MParser.fetch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFetchManyAsync([NotNull] MParser.FetchManyAsyncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FetchManyAsync</c>
	/// labeled alternative in <see cref="MParser.fetch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFetchManyAsync([NotNull] MParser.FetchManyAsyncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.then"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThen([NotNull] MParser.ThenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.then"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThen([NotNull] MParser.ThenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.read_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead_statement([NotNull] MParser.Read_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.read_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead_statement([NotNull] MParser.Read_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.sorted_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSorted_expression([NotNull] MParser.Sorted_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.sorted_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSorted_expression([NotNull] MParser.Sorted_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assign_instance_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_instance_statement([NotNull] MParser.Assign_instance_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assign_instance_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_instance_statement([NotNull] MParser.Assign_instance_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MemberInstance</c>
	/// labeled alternative in <see cref="MParser.child_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberInstance([NotNull] MParser.MemberInstanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MemberInstance</c>
	/// labeled alternative in <see cref="MParser.child_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberInstance([NotNull] MParser.MemberInstanceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ItemInstance</c>
	/// labeled alternative in <see cref="MParser.child_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItemInstance([NotNull] MParser.ItemInstanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ItemInstance</c>
	/// labeled alternative in <see cref="MParser.child_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItemInstance([NotNull] MParser.ItemInstanceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assign_tuple_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_tuple_statement([NotNull] MParser.Assign_tuple_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assign_tuple_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_tuple_statement([NotNull] MParser.Assign_tuple_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.lfs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLfs([NotNull] MParser.LfsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.lfs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLfs([NotNull] MParser.LfsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.lfp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLfp([NotNull] MParser.LfpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.lfp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLfp([NotNull] MParser.LfpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.ws_plus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWs_plus([NotNull] MParser.Ws_plusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.ws_plus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWs_plus([NotNull] MParser.Ws_plusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.indent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndent([NotNull] MParser.IndentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.indent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndent([NotNull] MParser.IndentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.dedent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDedent([NotNull] MParser.DedentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.dedent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDedent([NotNull] MParser.DedentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.type_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_literal([NotNull] MParser.Type_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.type_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_literal([NotNull] MParser.Type_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.null_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNull_literal([NotNull] MParser.Null_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.null_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNull_literal([NotNull] MParser.Null_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.comment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment_statement([NotNull] MParser.Comment_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.comment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment_statement([NotNull] MParser.Comment_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.repl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepl([NotNull] MParser.ReplContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.repl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepl([NotNull] MParser.ReplContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FullDeclarationList</c>
	/// labeled alternative in <see cref="MParser.declaration_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFullDeclarationList([NotNull] MParser.FullDeclarationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FullDeclarationList</c>
	/// labeled alternative in <see cref="MParser.declaration_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFullDeclarationList([NotNull] MParser.FullDeclarationListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarations([NotNull] MParser.DeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarations([NotNull] MParser.DeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] MParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] MParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.annotation_constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation_constructor([NotNull] MParser.Annotation_constructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.annotation_constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation_constructor([NotNull] MParser.Annotation_constructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.annotation_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation_identifier([NotNull] MParser.Annotation_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.annotation_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation_identifier([NotNull] MParser.Annotation_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.annotation_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation_argument([NotNull] MParser.Annotation_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.annotation_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation_argument([NotNull] MParser.Annotation_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.annotation_argument_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation_argument_name([NotNull] MParser.Annotation_argument_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.annotation_argument_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation_argument_name([NotNull] MParser.Annotation_argument_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnnotationLiteralValue</c>
	/// labeled alternative in <see cref="MParser.annotation_argument_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationLiteralValue([NotNull] MParser.AnnotationLiteralValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnnotationLiteralValue</c>
	/// labeled alternative in <see cref="MParser.annotation_argument_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationLiteralValue([NotNull] MParser.AnnotationLiteralValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnnotationTypeValue</c>
	/// labeled alternative in <see cref="MParser.annotation_argument_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationTypeValue([NotNull] MParser.AnnotationTypeValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnnotationTypeValue</c>
	/// labeled alternative in <see cref="MParser.annotation_argument_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationTypeValue([NotNull] MParser.AnnotationTypeValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.resource_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResource_declaration([NotNull] MParser.Resource_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.resource_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResource_declaration([NotNull] MParser.Resource_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.enum_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_declaration([NotNull] MParser.Enum_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.enum_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_declaration([NotNull] MParser.Enum_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_symbol_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_symbol_list([NotNull] MParser.Native_symbol_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_symbol_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_symbol_list([NotNull] MParser.Native_symbol_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.category_symbol_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCategory_symbol_list([NotNull] MParser.Category_symbol_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.category_symbol_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCategory_symbol_list([NotNull] MParser.Category_symbol_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.symbol_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbol_list([NotNull] MParser.Symbol_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.symbol_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbol_list([NotNull] MParser.Symbol_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MatchingList</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatchingList([NotNull] MParser.MatchingListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MatchingList</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatchingList([NotNull] MParser.MatchingListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MatchingSet</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatchingSet([NotNull] MParser.MatchingSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MatchingSet</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatchingSet([NotNull] MParser.MatchingSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MatchingRange</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatchingRange([NotNull] MParser.MatchingRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MatchingRange</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatchingRange([NotNull] MParser.MatchingRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MatchingPattern</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatchingPattern([NotNull] MParser.MatchingPatternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MatchingPattern</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatchingPattern([NotNull] MParser.MatchingPatternContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MatchingExpression</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatchingExpression([NotNull] MParser.MatchingExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MatchingExpression</c>
	/// labeled alternative in <see cref="MParser.attribute_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatchingExpression([NotNull] MParser.MatchingExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.list_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_literal([NotNull] MParser.List_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.list_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_literal([NotNull] MParser.List_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.set_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_literal([NotNull] MParser.Set_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.set_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_literal([NotNull] MParser.Set_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] MParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] MParser.Expression_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.range_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange_literal([NotNull] MParser.Range_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.range_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange_literal([NotNull] MParser.Range_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IteratorType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIteratorType([NotNull] MParser.IteratorTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IteratorType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIteratorType([NotNull] MParser.IteratorTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SetType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetType([NotNull] MParser.SetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SetType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetType([NotNull] MParser.SetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ListType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListType([NotNull] MParser.ListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ListType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListType([NotNull] MParser.ListTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DictType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictType([NotNull] MParser.DictTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DictType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictType([NotNull] MParser.DictTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CursorType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCursorType([NotNull] MParser.CursorTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CursorType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCursorType([NotNull] MParser.CursorTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeType([NotNull] MParser.TypeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeType([NotNull] MParser.TypeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimaryType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryType([NotNull] MParser.PrimaryTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimaryType</c>
	/// labeled alternative in <see cref="MParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryType([NotNull] MParser.PrimaryTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NativeType</c>
	/// labeled alternative in <see cref="MParser.primary_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeType([NotNull] MParser.NativeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NativeType</c>
	/// labeled alternative in <see cref="MParser.primary_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeType([NotNull] MParser.NativeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CategoryType</c>
	/// labeled alternative in <see cref="MParser.primary_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCategoryType([NotNull] MParser.CategoryTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CategoryType</c>
	/// labeled alternative in <see cref="MParser.primary_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCategoryType([NotNull] MParser.CategoryTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanType([NotNull] MParser.BooleanTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanType([NotNull] MParser.BooleanTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CssType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCssType([NotNull] MParser.CssTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CssType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCssType([NotNull] MParser.CssTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CharacterType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacterType([NotNull] MParser.CharacterTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CharacterType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacterType([NotNull] MParser.CharacterTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TextType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTextType([NotNull] MParser.TextTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TextType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTextType([NotNull] MParser.TextTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ImageType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImageType([NotNull] MParser.ImageTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ImageType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImageType([NotNull] MParser.ImageTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IntegerType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerType([NotNull] MParser.IntegerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntegerType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerType([NotNull] MParser.IntegerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DecimalType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecimalType([NotNull] MParser.DecimalTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DecimalType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecimalType([NotNull] MParser.DecimalTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DocumentType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocumentType([NotNull] MParser.DocumentTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DocumentType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocumentType([NotNull] MParser.DocumentTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DateType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateType([NotNull] MParser.DateTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DateType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateType([NotNull] MParser.DateTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DateTimeType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimeType([NotNull] MParser.DateTimeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DateTimeType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimeType([NotNull] MParser.DateTimeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TimeType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeType([NotNull] MParser.TimeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TimeType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeType([NotNull] MParser.TimeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PeriodType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPeriodType([NotNull] MParser.PeriodTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PeriodType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPeriodType([NotNull] MParser.PeriodTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VersionType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVersionType([NotNull] MParser.VersionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VersionType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVersionType([NotNull] MParser.VersionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CodeType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeType([NotNull] MParser.CodeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CodeType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeType([NotNull] MParser.CodeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BlobType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlobType([NotNull] MParser.BlobTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BlobType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlobType([NotNull] MParser.BlobTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UUIDType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUUIDType([NotNull] MParser.UUIDTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UUIDType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUUIDType([NotNull] MParser.UUIDTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>HtmlType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlType([NotNull] MParser.HtmlTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>HtmlType</c>
	/// labeled alternative in <see cref="MParser.native_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlType([NotNull] MParser.HtmlTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.category_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCategory_type([NotNull] MParser.Category_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.category_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCategory_type([NotNull] MParser.Category_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.mutable_category_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutable_category_type([NotNull] MParser.Mutable_category_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.mutable_category_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutable_category_type([NotNull] MParser.Mutable_category_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.code_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode_type([NotNull] MParser.Code_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.code_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode_type([NotNull] MParser.Code_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConcreteCategoryDeclaration</c>
	/// labeled alternative in <see cref="MParser.category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcreteCategoryDeclaration([NotNull] MParser.ConcreteCategoryDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConcreteCategoryDeclaration</c>
	/// labeled alternative in <see cref="MParser.category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcreteCategoryDeclaration([NotNull] MParser.ConcreteCategoryDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NativeCategoryDeclaration</c>
	/// labeled alternative in <see cref="MParser.category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeCategoryDeclaration([NotNull] MParser.NativeCategoryDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NativeCategoryDeclaration</c>
	/// labeled alternative in <see cref="MParser.category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeCategoryDeclaration([NotNull] MParser.NativeCategoryDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SingletonCategoryDeclaration</c>
	/// labeled alternative in <see cref="MParser.category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingletonCategoryDeclaration([NotNull] MParser.SingletonCategoryDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SingletonCategoryDeclaration</c>
	/// labeled alternative in <see cref="MParser.category_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingletonCategoryDeclaration([NotNull] MParser.SingletonCategoryDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConcreteWidgetDeclaration</c>
	/// labeled alternative in <see cref="MParser.widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcreteWidgetDeclaration([NotNull] MParser.ConcreteWidgetDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConcreteWidgetDeclaration</c>
	/// labeled alternative in <see cref="MParser.widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcreteWidgetDeclaration([NotNull] MParser.ConcreteWidgetDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NativeWidgetDeclaration</c>
	/// labeled alternative in <see cref="MParser.widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeWidgetDeclaration([NotNull] MParser.NativeWidgetDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NativeWidgetDeclaration</c>
	/// labeled alternative in <see cref="MParser.widget_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeWidgetDeclaration([NotNull] MParser.NativeWidgetDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.type_identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_identifier_list([NotNull] MParser.Type_identifier_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.type_identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_identifier_list([NotNull] MParser.Type_identifier_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.method_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_identifier([NotNull] MParser.Method_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.method_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_identifier([NotNull] MParser.Method_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.identifier_or_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier_or_keyword([NotNull] MParser.Identifier_or_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.identifier_or_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier_or_keyword([NotNull] MParser.Identifier_or_keywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.nospace_hyphen_identifier_or_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNospace_hyphen_identifier_or_keyword([NotNull] MParser.Nospace_hyphen_identifier_or_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.nospace_hyphen_identifier_or_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNospace_hyphen_identifier_or_keyword([NotNull] MParser.Nospace_hyphen_identifier_or_keywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.nospace_identifier_or_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNospace_identifier_or_keyword([NotNull] MParser.Nospace_identifier_or_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.nospace_identifier_or_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNospace_identifier_or_keyword([NotNull] MParser.Nospace_identifier_or_keywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableIdentifier</c>
	/// labeled alternative in <see cref="MParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableIdentifier([NotNull] MParser.VariableIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableIdentifier</c>
	/// labeled alternative in <see cref="MParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableIdentifier([NotNull] MParser.VariableIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeIdentifier</c>
	/// labeled alternative in <see cref="MParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeIdentifier([NotNull] MParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeIdentifier</c>
	/// labeled alternative in <see cref="MParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeIdentifier([NotNull] MParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SymbolIdentifier</c>
	/// labeled alternative in <see cref="MParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbolIdentifier([NotNull] MParser.SymbolIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SymbolIdentifier</c>
	/// labeled alternative in <see cref="MParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbolIdentifier([NotNull] MParser.SymbolIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.member_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_identifier([NotNull] MParser.Member_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.member_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_identifier([NotNull] MParser.Member_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.variable_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_identifier([NotNull] MParser.Variable_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.variable_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_identifier([NotNull] MParser.Variable_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.attribute_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_identifier([NotNull] MParser.Attribute_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.attribute_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_identifier([NotNull] MParser.Attribute_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.type_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_identifier([NotNull] MParser.Type_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.type_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_identifier([NotNull] MParser.Type_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.symbol_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbol_identifier([NotNull] MParser.Symbol_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.symbol_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbol_identifier([NotNull] MParser.Symbol_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_list([NotNull] MParser.Argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_list([NotNull] MParser.Argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CodeArgument</c>
	/// labeled alternative in <see cref="MParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeArgument([NotNull] MParser.CodeArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CodeArgument</c>
	/// labeled alternative in <see cref="MParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeArgument([NotNull] MParser.CodeArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorArgument</c>
	/// labeled alternative in <see cref="MParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorArgument([NotNull] MParser.OperatorArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorArgument</c>
	/// labeled alternative in <see cref="MParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorArgument([NotNull] MParser.OperatorArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.operator_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator_argument([NotNull] MParser.Operator_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.operator_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator_argument([NotNull] MParser.Operator_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.named_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamed_argument([NotNull] MParser.Named_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.named_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamed_argument([NotNull] MParser.Named_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.code_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode_argument([NotNull] MParser.Code_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.code_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode_argument([NotNull] MParser.Code_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.category_or_any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCategory_or_any_type([NotNull] MParser.Category_or_any_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.category_or_any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCategory_or_any_type([NotNull] MParser.Category_or_any_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnyListType</c>
	/// labeled alternative in <see cref="MParser.any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnyListType([NotNull] MParser.AnyListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnyListType</c>
	/// labeled alternative in <see cref="MParser.any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnyListType([NotNull] MParser.AnyListTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnyType</c>
	/// labeled alternative in <see cref="MParser.any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnyType([NotNull] MParser.AnyTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnyType</c>
	/// labeled alternative in <see cref="MParser.any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnyType([NotNull] MParser.AnyTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnyDictType</c>
	/// labeled alternative in <see cref="MParser.any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnyDictType([NotNull] MParser.AnyDictTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnyDictType</c>
	/// labeled alternative in <see cref="MParser.any_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnyDictType([NotNull] MParser.AnyDictTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.member_method_declaration_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_method_declaration_list([NotNull] MParser.Member_method_declaration_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.member_method_declaration_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_method_declaration_list([NotNull] MParser.Member_method_declaration_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.member_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_method_declaration([NotNull] MParser.Member_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.member_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_method_declaration([NotNull] MParser.Member_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_member_method_declaration_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_member_method_declaration_list([NotNull] MParser.Native_member_method_declaration_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_member_method_declaration_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_member_method_declaration_list([NotNull] MParser.Native_member_method_declaration_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_member_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_member_method_declaration([NotNull] MParser.Native_member_method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_member_method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_member_method_declaration([NotNull] MParser.Native_member_method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaCategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaCategoryBinding([NotNull] MParser.JavaCategoryBindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaCategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaCategoryBinding([NotNull] MParser.JavaCategoryBindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpCategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpCategoryBinding([NotNull] MParser.CSharpCategoryBindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpCategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpCategoryBinding([NotNull] MParser.CSharpCategoryBindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Python2CategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython2CategoryBinding([NotNull] MParser.Python2CategoryBindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Python2CategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython2CategoryBinding([NotNull] MParser.Python2CategoryBindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Python3CategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython3CategoryBinding([NotNull] MParser.Python3CategoryBindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Python3CategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython3CategoryBinding([NotNull] MParser.Python3CategoryBindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptCategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptCategoryBinding([NotNull] MParser.JavascriptCategoryBindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptCategoryBinding</c>
	/// labeled alternative in <see cref="MParser.native_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptCategoryBinding([NotNull] MParser.JavascriptCategoryBindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_category_binding([NotNull] MParser.Python_category_bindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_category_binding([NotNull] MParser.Python_category_bindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_module([NotNull] MParser.Python_moduleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_module([NotNull] MParser.Python_moduleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_category_binding([NotNull] MParser.Javascript_category_bindingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_category_binding"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_category_binding([NotNull] MParser.Javascript_category_bindingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_module([NotNull] MParser.Javascript_moduleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_module([NotNull] MParser.Javascript_moduleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.variable_identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_identifier_list([NotNull] MParser.Variable_identifier_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.variable_identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_identifier_list([NotNull] MParser.Variable_identifier_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.attribute_identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_identifier_list([NotNull] MParser.Attribute_identifier_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.attribute_identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_identifier_list([NotNull] MParser.Attribute_identifier_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_declaration([NotNull] MParser.Method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_declaration([NotNull] MParser.Method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.native_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_statement_list([NotNull] MParser.Native_statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.native_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_statement_list([NotNull] MParser.Native_statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaNativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaNativeStatement([NotNull] MParser.JavaNativeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaNativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaNativeStatement([NotNull] MParser.JavaNativeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpNativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpNativeStatement([NotNull] MParser.CSharpNativeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpNativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpNativeStatement([NotNull] MParser.CSharpNativeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Python2NativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython2NativeStatement([NotNull] MParser.Python2NativeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Python2NativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython2NativeStatement([NotNull] MParser.Python2NativeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Python3NativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython3NativeStatement([NotNull] MParser.Python3NativeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Python3NativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython3NativeStatement([NotNull] MParser.Python3NativeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptNativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptNativeStatement([NotNull] MParser.JavascriptNativeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptNativeStatement</c>
	/// labeled alternative in <see cref="MParser.native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptNativeStatement([NotNull] MParser.JavascriptNativeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_native_statement([NotNull] MParser.Python_native_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_native_statement([NotNull] MParser.Python_native_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_native_statement([NotNull] MParser.Javascript_native_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_native_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_native_statement([NotNull] MParser.Javascript_native_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_list([NotNull] MParser.Statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_list([NotNull] MParser.Statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assertion_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssertion_list([NotNull] MParser.Assertion_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assertion_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssertion_list([NotNull] MParser.Assertion_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.switch_case_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_case_statement_list([NotNull] MParser.Switch_case_statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.switch_case_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_case_statement_list([NotNull] MParser.Switch_case_statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.catch_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatch_statement_list([NotNull] MParser.Catch_statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.catch_statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatch_statement_list([NotNull] MParser.Catch_statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralRangeLiteral</c>
	/// labeled alternative in <see cref="MParser.literal_collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralRangeLiteral([NotNull] MParser.LiteralRangeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralRangeLiteral</c>
	/// labeled alternative in <see cref="MParser.literal_collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralRangeLiteral([NotNull] MParser.LiteralRangeLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralListLiteral</c>
	/// labeled alternative in <see cref="MParser.literal_collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralListLiteral([NotNull] MParser.LiteralListLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralListLiteral</c>
	/// labeled alternative in <see cref="MParser.literal_collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralListLiteral([NotNull] MParser.LiteralListLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralSetLiteral</c>
	/// labeled alternative in <see cref="MParser.literal_collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralSetLiteral([NotNull] MParser.LiteralSetLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralSetLiteral</c>
	/// labeled alternative in <see cref="MParser.literal_collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralSetLiteral([NotNull] MParser.LiteralSetLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MinIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinIntegerLiteral([NotNull] MParser.MinIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MinIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinIntegerLiteral([NotNull] MParser.MinIntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MaxIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaxIntegerLiteral([NotNull] MParser.MaxIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MaxIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaxIntegerLiteral([NotNull] MParser.MaxIntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerLiteral([NotNull] MParser.IntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerLiteral([NotNull] MParser.IntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>HexadecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHexadecimalLiteral([NotNull] MParser.HexadecimalLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>HexadecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHexadecimalLiteral([NotNull] MParser.HexadecimalLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacterLiteral([NotNull] MParser.CharacterLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacterLiteral([NotNull] MParser.CharacterLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DateLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateLiteral([NotNull] MParser.DateLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DateLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateLiteral([NotNull] MParser.DateLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TimeLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeLiteral([NotNull] MParser.TimeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TimeLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeLiteral([NotNull] MParser.TimeLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TextLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTextLiteral([NotNull] MParser.TextLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TextLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTextLiteral([NotNull] MParser.TextLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecimalLiteral([NotNull] MParser.DecimalLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecimalLiteral([NotNull] MParser.DecimalLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DateTimeLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimeLiteral([NotNull] MParser.DateTimeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DateTimeLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimeLiteral([NotNull] MParser.DateTimeLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteral([NotNull] MParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteral([NotNull] MParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PeriodLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPeriodLiteral([NotNull] MParser.PeriodLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PeriodLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPeriodLiteral([NotNull] MParser.PeriodLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VersionLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVersionLiteral([NotNull] MParser.VersionLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VersionLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVersionLiteral([NotNull] MParser.VersionLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UUIDLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUUIDLiteral([NotNull] MParser.UUIDLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UUIDLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUUIDLiteral([NotNull] MParser.UUIDLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SymbolLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbolLiteral([NotNull] MParser.SymbolLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SymbolLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbolLiteral([NotNull] MParser.SymbolLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeLiteral([NotNull] MParser.TypeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeLiteral([NotNull] MParser.TypeLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NullLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullLiteral([NotNull] MParser.NullLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NullLiteral</c>
	/// labeled alternative in <see cref="MParser.atomic_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullLiteral([NotNull] MParser.NullLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.literal_list_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_list_literal([NotNull] MParser.Literal_list_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.literal_list_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_list_literal([NotNull] MParser.Literal_list_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThis_expression([NotNull] MParser.This_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThis_expression([NotNull] MParser.This_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.super_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuper_expression([NotNull] MParser.Super_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.super_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuper_expression([NotNull] MParser.Super_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis_expression([NotNull] MParser.Parenthesis_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis_expression([NotNull] MParser.Parenthesis_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_expression([NotNull] MParser.Literal_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_expression([NotNull] MParser.Literal_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.collection_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection_literal([NotNull] MParser.Collection_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.collection_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection_literal([NotNull] MParser.Collection_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.tuple_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTuple_literal([NotNull] MParser.Tuple_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.tuple_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTuple_literal([NotNull] MParser.Tuple_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.dict_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDict_literal([NotNull] MParser.Dict_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.dict_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDict_literal([NotNull] MParser.Dict_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.document_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocument_literal([NotNull] MParser.Document_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.document_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocument_literal([NotNull] MParser.Document_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.expression_tuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_tuple([NotNull] MParser.Expression_tupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.expression_tuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_tuple([NotNull] MParser.Expression_tupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.doc_entry_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoc_entry_list([NotNull] MParser.Doc_entry_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.doc_entry_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoc_entry_list([NotNull] MParser.Doc_entry_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.doc_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoc_entry([NotNull] MParser.Doc_entryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.doc_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoc_entry([NotNull] MParser.Doc_entryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DocKeyIdentifier</c>
	/// labeled alternative in <see cref="MParser.doc_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocKeyIdentifier([NotNull] MParser.DocKeyIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DocKeyIdentifier</c>
	/// labeled alternative in <see cref="MParser.doc_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocKeyIdentifier([NotNull] MParser.DocKeyIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DocKeyText</c>
	/// labeled alternative in <see cref="MParser.doc_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocKeyText([NotNull] MParser.DocKeyTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DocKeyText</c>
	/// labeled alternative in <see cref="MParser.doc_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocKeyText([NotNull] MParser.DocKeyTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.dict_entry_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDict_entry_list([NotNull] MParser.Dict_entry_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.dict_entry_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDict_entry_list([NotNull] MParser.Dict_entry_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.dict_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDict_entry([NotNull] MParser.Dict_entryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.dict_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDict_entry([NotNull] MParser.Dict_entryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DictKeyIdentifier</c>
	/// labeled alternative in <see cref="MParser.dict_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictKeyIdentifier([NotNull] MParser.DictKeyIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DictKeyIdentifier</c>
	/// labeled alternative in <see cref="MParser.dict_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictKeyIdentifier([NotNull] MParser.DictKeyIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DictKeyText</c>
	/// labeled alternative in <see cref="MParser.dict_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictKeyText([NotNull] MParser.DictKeyTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DictKeyText</c>
	/// labeled alternative in <see cref="MParser.dict_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictKeyText([NotNull] MParser.DictKeyTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SliceFirstAndLast</c>
	/// labeled alternative in <see cref="MParser.slice_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceFirstAndLast([NotNull] MParser.SliceFirstAndLastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SliceFirstAndLast</c>
	/// labeled alternative in <see cref="MParser.slice_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceFirstAndLast([NotNull] MParser.SliceFirstAndLastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SliceFirstOnly</c>
	/// labeled alternative in <see cref="MParser.slice_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceFirstOnly([NotNull] MParser.SliceFirstOnlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SliceFirstOnly</c>
	/// labeled alternative in <see cref="MParser.slice_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceFirstOnly([NotNull] MParser.SliceFirstOnlyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SliceLastOnly</c>
	/// labeled alternative in <see cref="MParser.slice_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceLastOnly([NotNull] MParser.SliceLastOnlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SliceLastOnly</c>
	/// labeled alternative in <see cref="MParser.slice_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceLastOnly([NotNull] MParser.SliceLastOnlyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assign_variable_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_variable_statement([NotNull] MParser.Assign_variable_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assign_variable_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_variable_statement([NotNull] MParser.Assign_variable_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ChildInstance</c>
	/// labeled alternative in <see cref="MParser.assignable_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChildInstance([NotNull] MParser.ChildInstanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ChildInstance</c>
	/// labeled alternative in <see cref="MParser.assignable_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChildInstance([NotNull] MParser.ChildInstanceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RootInstance</c>
	/// labeled alternative in <see cref="MParser.assignable_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRootInstance([NotNull] MParser.RootInstanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RootInstance</c>
	/// labeled alternative in <see cref="MParser.assignable_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRootInstance([NotNull] MParser.RootInstanceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IsATypeExpression</c>
	/// labeled alternative in <see cref="MParser.is_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsATypeExpression([NotNull] MParser.IsATypeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IsATypeExpression</c>
	/// labeled alternative in <see cref="MParser.is_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsATypeExpression([NotNull] MParser.IsATypeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IsOtherExpression</c>
	/// labeled alternative in <see cref="MParser.is_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsOtherExpression([NotNull] MParser.IsOtherExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IsOtherExpression</c>
	/// labeled alternative in <see cref="MParser.is_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsOtherExpression([NotNull] MParser.IsOtherExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMetadata([NotNull] MParser.MetadataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMetadata([NotNull] MParser.MetadataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrowExpressionBody</c>
	/// labeled alternative in <see cref="MParser.arrow_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowExpressionBody([NotNull] MParser.ArrowExpressionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrowExpressionBody</c>
	/// labeled alternative in <see cref="MParser.arrow_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowExpressionBody([NotNull] MParser.ArrowExpressionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrowStatementsBody</c>
	/// labeled alternative in <see cref="MParser.arrow_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowStatementsBody([NotNull] MParser.ArrowStatementsBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrowStatementsBody</c>
	/// labeled alternative in <see cref="MParser.arrow_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowStatementsBody([NotNull] MParser.ArrowStatementsBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.arrow_prefix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrow_prefix([NotNull] MParser.Arrow_prefixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.arrow_prefix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrow_prefix([NotNull] MParser.Arrow_prefixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrowSingleArg</c>
	/// labeled alternative in <see cref="MParser.arrow_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowSingleArg([NotNull] MParser.ArrowSingleArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrowSingleArg</c>
	/// labeled alternative in <see cref="MParser.arrow_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowSingleArg([NotNull] MParser.ArrowSingleArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrowListArg</c>
	/// labeled alternative in <see cref="MParser.arrow_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowListArg([NotNull] MParser.ArrowListArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrowListArg</c>
	/// labeled alternative in <see cref="MParser.arrow_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowListArg([NotNull] MParser.ArrowListArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.sorted_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSorted_key([NotNull] MParser.Sorted_keyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.sorted_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSorted_key([NotNull] MParser.Sorted_keyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.read_blob_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead_blob_expression([NotNull] MParser.Read_blob_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.read_blob_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead_blob_expression([NotNull] MParser.Read_blob_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.read_all_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead_all_expression([NotNull] MParser.Read_all_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.read_all_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead_all_expression([NotNull] MParser.Read_all_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.read_one_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead_one_expression([NotNull] MParser.Read_one_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.read_one_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead_one_expression([NotNull] MParser.Read_one_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.order_by_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrder_by_list([NotNull] MParser.Order_by_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.order_by_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrder_by_list([NotNull] MParser.Order_by_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.order_by"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrder_by([NotNull] MParser.Order_byContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.order_by"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrder_by([NotNull] MParser.Order_byContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorPlus</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorPlus([NotNull] MParser.OperatorPlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorPlus</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorPlus([NotNull] MParser.OperatorPlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorMinus</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorMinus([NotNull] MParser.OperatorMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorMinus</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorMinus([NotNull] MParser.OperatorMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorMultiply</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorMultiply([NotNull] MParser.OperatorMultiplyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorMultiply</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorMultiply([NotNull] MParser.OperatorMultiplyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorDivide</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorDivide([NotNull] MParser.OperatorDivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorDivide</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorDivide([NotNull] MParser.OperatorDivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorIDivide</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorIDivide([NotNull] MParser.OperatorIDivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorIDivide</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorIDivide([NotNull] MParser.OperatorIDivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorModulo</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorModulo([NotNull] MParser.OperatorModuloContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorModulo</c>
	/// labeled alternative in <see cref="MParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorModulo([NotNull] MParser.OperatorModuloContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] MParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] MParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.new_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNew_token([NotNull] MParser.New_tokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.new_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNew_token([NotNull] MParser.New_tokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.key_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKey_token([NotNull] MParser.Key_tokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.key_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKey_token([NotNull] MParser.Key_tokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.module_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_token([NotNull] MParser.Module_tokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.module_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_token([NotNull] MParser.Module_tokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.value_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue_token([NotNull] MParser.Value_tokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.value_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue_token([NotNull] MParser.Value_tokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.symbols_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbols_token([NotNull] MParser.Symbols_tokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.symbols_token"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbols_token([NotNull] MParser.Symbols_tokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] MParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] MParser.AssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.multiply"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiply([NotNull] MParser.MultiplyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.multiply"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiply([NotNull] MParser.MultiplyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivide([NotNull] MParser.DivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivide([NotNull] MParser.DivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.idivide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdivide([NotNull] MParser.IdivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.idivide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdivide([NotNull] MParser.IdivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.modulo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModulo([NotNull] MParser.ModuloContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.modulo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModulo([NotNull] MParser.ModuloContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptReturnStatement</c>
	/// labeled alternative in <see cref="MParser.javascript_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptReturnStatement([NotNull] MParser.JavascriptReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptReturnStatement</c>
	/// labeled alternative in <see cref="MParser.javascript_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptReturnStatement([NotNull] MParser.JavascriptReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptStatement</c>
	/// labeled alternative in <see cref="MParser.javascript_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptStatement([NotNull] MParser.JavascriptStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptStatement</c>
	/// labeled alternative in <see cref="MParser.javascript_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptStatement([NotNull] MParser.JavascriptStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptSelectorExpression([NotNull] MParser.JavascriptSelectorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptSelectorExpression([NotNull] MParser.JavascriptSelectorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptPrimaryExpression([NotNull] MParser.JavascriptPrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptPrimaryExpression([NotNull] MParser.JavascriptPrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_primary_expression([NotNull] MParser.Javascript_primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_primary_expression([NotNull] MParser.Javascript_primary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_this_expression([NotNull] MParser.Javascript_this_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_this_expression([NotNull] MParser.Javascript_this_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_new_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_new_expression([NotNull] MParser.Javascript_new_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_new_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_new_expression([NotNull] MParser.Javascript_new_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptMethodExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptMethodExpression([NotNull] MParser.JavascriptMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptMethodExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptMethodExpression([NotNull] MParser.JavascriptMethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptMemberExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptMemberExpression([NotNull] MParser.JavascriptMemberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptMemberExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptMemberExpression([NotNull] MParser.JavascriptMemberExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptItemExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptItemExpression([NotNull] MParser.JavascriptItemExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptItemExpression</c>
	/// labeled alternative in <see cref="MParser.javascript_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptItemExpression([NotNull] MParser.JavascriptItemExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_method_expression([NotNull] MParser.Javascript_method_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_method_expression([NotNull] MParser.Javascript_method_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptArgumentList</c>
	/// labeled alternative in <see cref="MParser.javascript_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptArgumentList([NotNull] MParser.JavascriptArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptArgumentList</c>
	/// labeled alternative in <see cref="MParser.javascript_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptArgumentList([NotNull] MParser.JavascriptArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.javascript_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptArgumentListItem([NotNull] MParser.JavascriptArgumentListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.javascript_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptArgumentListItem([NotNull] MParser.JavascriptArgumentListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_item_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_item_expression([NotNull] MParser.Javascript_item_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_item_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_item_expression([NotNull] MParser.Javascript_item_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_parenthesis_expression([NotNull] MParser.Javascript_parenthesis_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_parenthesis_expression([NotNull] MParser.Javascript_parenthesis_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_identifier_expression([NotNull] MParser.Javascript_identifier_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_identifier_expression([NotNull] MParser.Javascript_identifier_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptIntegerLiteral([NotNull] MParser.JavascriptIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptIntegerLiteral([NotNull] MParser.JavascriptIntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptDecimalLiteral([NotNull] MParser.JavascriptDecimalLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptDecimalLiteral([NotNull] MParser.JavascriptDecimalLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptTextLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptTextLiteral([NotNull] MParser.JavascriptTextLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptTextLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptTextLiteral([NotNull] MParser.JavascriptTextLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptBooleanLiteral([NotNull] MParser.JavascriptBooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptBooleanLiteral([NotNull] MParser.JavascriptBooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavascriptCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascriptCharacterLiteral([NotNull] MParser.JavascriptCharacterLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavascriptCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.javascript_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascriptCharacterLiteral([NotNull] MParser.JavascriptCharacterLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.javascript_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavascript_identifier([NotNull] MParser.Javascript_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.javascript_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavascript_identifier([NotNull] MParser.Javascript_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonReturnStatement</c>
	/// labeled alternative in <see cref="MParser.python_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonReturnStatement([NotNull] MParser.PythonReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonReturnStatement</c>
	/// labeled alternative in <see cref="MParser.python_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonReturnStatement([NotNull] MParser.PythonReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonStatement</c>
	/// labeled alternative in <see cref="MParser.python_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonStatement([NotNull] MParser.PythonStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonStatement</c>
	/// labeled alternative in <see cref="MParser.python_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonStatement([NotNull] MParser.PythonStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.python_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonSelectorExpression([NotNull] MParser.PythonSelectorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.python_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonSelectorExpression([NotNull] MParser.PythonSelectorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.python_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonPrimaryExpression([NotNull] MParser.PythonPrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.python_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonPrimaryExpression([NotNull] MParser.PythonPrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonSelfExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonSelfExpression([NotNull] MParser.PythonSelfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonSelfExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonSelfExpression([NotNull] MParser.PythonSelfExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonParenthesisExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonParenthesisExpression([NotNull] MParser.PythonParenthesisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonParenthesisExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonParenthesisExpression([NotNull] MParser.PythonParenthesisExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonIdentifierExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonIdentifierExpression([NotNull] MParser.PythonIdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonIdentifierExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonIdentifierExpression([NotNull] MParser.PythonIdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonLiteralExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonLiteralExpression([NotNull] MParser.PythonLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonLiteralExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonLiteralExpression([NotNull] MParser.PythonLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonGlobalMethodExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonGlobalMethodExpression([NotNull] MParser.PythonGlobalMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonGlobalMethodExpression</c>
	/// labeled alternative in <see cref="MParser.python_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonGlobalMethodExpression([NotNull] MParser.PythonGlobalMethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_self_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_self_expression([NotNull] MParser.Python_self_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_self_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_self_expression([NotNull] MParser.Python_self_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonMethodExpression</c>
	/// labeled alternative in <see cref="MParser.python_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonMethodExpression([NotNull] MParser.PythonMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonMethodExpression</c>
	/// labeled alternative in <see cref="MParser.python_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonMethodExpression([NotNull] MParser.PythonMethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonItemExpression</c>
	/// labeled alternative in <see cref="MParser.python_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonItemExpression([NotNull] MParser.PythonItemExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonItemExpression</c>
	/// labeled alternative in <see cref="MParser.python_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonItemExpression([NotNull] MParser.PythonItemExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_method_expression([NotNull] MParser.Python_method_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_method_expression([NotNull] MParser.Python_method_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonOrdinalOnlyArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonOrdinalOnlyArgumentList([NotNull] MParser.PythonOrdinalOnlyArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonOrdinalOnlyArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonOrdinalOnlyArgumentList([NotNull] MParser.PythonOrdinalOnlyArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonNamedOnlyArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonNamedOnlyArgumentList([NotNull] MParser.PythonNamedOnlyArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonNamedOnlyArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonNamedOnlyArgumentList([NotNull] MParser.PythonNamedOnlyArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonArgumentList([NotNull] MParser.PythonArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonArgumentList([NotNull] MParser.PythonArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonOrdinalArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_ordinal_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonOrdinalArgumentList([NotNull] MParser.PythonOrdinalArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonOrdinalArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_ordinal_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonOrdinalArgumentList([NotNull] MParser.PythonOrdinalArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonOrdinalArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.python_ordinal_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonOrdinalArgumentListItem([NotNull] MParser.PythonOrdinalArgumentListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonOrdinalArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.python_ordinal_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonOrdinalArgumentListItem([NotNull] MParser.PythonOrdinalArgumentListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonNamedArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_named_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonNamedArgumentList([NotNull] MParser.PythonNamedArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonNamedArgumentList</c>
	/// labeled alternative in <see cref="MParser.python_named_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonNamedArgumentList([NotNull] MParser.PythonNamedArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonNamedArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.python_named_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonNamedArgumentListItem([NotNull] MParser.PythonNamedArgumentListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonNamedArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.python_named_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonNamedArgumentListItem([NotNull] MParser.PythonNamedArgumentListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_parenthesis_expression([NotNull] MParser.Python_parenthesis_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_parenthesis_expression([NotNull] MParser.Python_parenthesis_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonChildIdentifier</c>
	/// labeled alternative in <see cref="MParser.python_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonChildIdentifier([NotNull] MParser.PythonChildIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonChildIdentifier</c>
	/// labeled alternative in <see cref="MParser.python_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonChildIdentifier([NotNull] MParser.PythonChildIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonPromptoIdentifier</c>
	/// labeled alternative in <see cref="MParser.python_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonPromptoIdentifier([NotNull] MParser.PythonPromptoIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonPromptoIdentifier</c>
	/// labeled alternative in <see cref="MParser.python_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonPromptoIdentifier([NotNull] MParser.PythonPromptoIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonIdentifier</c>
	/// labeled alternative in <see cref="MParser.python_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonIdentifier([NotNull] MParser.PythonIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonIdentifier</c>
	/// labeled alternative in <see cref="MParser.python_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonIdentifier([NotNull] MParser.PythonIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonIntegerLiteral([NotNull] MParser.PythonIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonIntegerLiteral([NotNull] MParser.PythonIntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonDecimalLiteral([NotNull] MParser.PythonDecimalLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonDecimalLiteral([NotNull] MParser.PythonDecimalLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonTextLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonTextLiteral([NotNull] MParser.PythonTextLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonTextLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonTextLiteral([NotNull] MParser.PythonTextLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonBooleanLiteral([NotNull] MParser.PythonBooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonBooleanLiteral([NotNull] MParser.PythonBooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PythonCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPythonCharacterLiteral([NotNull] MParser.PythonCharacterLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PythonCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.python_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPythonCharacterLiteral([NotNull] MParser.PythonCharacterLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.python_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPython_identifier([NotNull] MParser.Python_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.python_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPython_identifier([NotNull] MParser.Python_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaReturnStatement</c>
	/// labeled alternative in <see cref="MParser.java_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaReturnStatement([NotNull] MParser.JavaReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaReturnStatement</c>
	/// labeled alternative in <see cref="MParser.java_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaReturnStatement([NotNull] MParser.JavaReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaStatement</c>
	/// labeled alternative in <see cref="MParser.java_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaStatement([NotNull] MParser.JavaStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaStatement</c>
	/// labeled alternative in <see cref="MParser.java_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaStatement([NotNull] MParser.JavaStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.java_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaSelectorExpression([NotNull] MParser.JavaSelectorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.java_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaSelectorExpression([NotNull] MParser.JavaSelectorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.java_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaPrimaryExpression([NotNull] MParser.JavaPrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.java_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaPrimaryExpression([NotNull] MParser.JavaPrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_primary_expression([NotNull] MParser.Java_primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_primary_expression([NotNull] MParser.Java_primary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_this_expression([NotNull] MParser.Java_this_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_this_expression([NotNull] MParser.Java_this_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_new_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_new_expression([NotNull] MParser.Java_new_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_new_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_new_expression([NotNull] MParser.Java_new_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaMethodExpression</c>
	/// labeled alternative in <see cref="MParser.java_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaMethodExpression([NotNull] MParser.JavaMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaMethodExpression</c>
	/// labeled alternative in <see cref="MParser.java_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaMethodExpression([NotNull] MParser.JavaMethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaItemExpression</c>
	/// labeled alternative in <see cref="MParser.java_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaItemExpression([NotNull] MParser.JavaItemExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaItemExpression</c>
	/// labeled alternative in <see cref="MParser.java_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaItemExpression([NotNull] MParser.JavaItemExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_method_expression([NotNull] MParser.Java_method_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_method_expression([NotNull] MParser.Java_method_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.java_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaArgumentListItem([NotNull] MParser.JavaArgumentListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.java_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaArgumentListItem([NotNull] MParser.JavaArgumentListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaArgumentList</c>
	/// labeled alternative in <see cref="MParser.java_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaArgumentList([NotNull] MParser.JavaArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaArgumentList</c>
	/// labeled alternative in <see cref="MParser.java_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaArgumentList([NotNull] MParser.JavaArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_item_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_item_expression([NotNull] MParser.Java_item_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_item_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_item_expression([NotNull] MParser.Java_item_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_parenthesis_expression([NotNull] MParser.Java_parenthesis_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_parenthesis_expression([NotNull] MParser.Java_parenthesis_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaIdentifier([NotNull] MParser.JavaIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaIdentifier([NotNull] MParser.JavaIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaChildIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaChildIdentifier([NotNull] MParser.JavaChildIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaChildIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaChildIdentifier([NotNull] MParser.JavaChildIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaClassIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_class_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaClassIdentifier([NotNull] MParser.JavaClassIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaClassIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_class_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaClassIdentifier([NotNull] MParser.JavaClassIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaChildClassIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_class_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaChildClassIdentifier([NotNull] MParser.JavaChildClassIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaChildClassIdentifier</c>
	/// labeled alternative in <see cref="MParser.java_class_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaChildClassIdentifier([NotNull] MParser.JavaChildClassIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaIntegerLiteral([NotNull] MParser.JavaIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaIntegerLiteral([NotNull] MParser.JavaIntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaDecimalLiteral([NotNull] MParser.JavaDecimalLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaDecimalLiteral([NotNull] MParser.JavaDecimalLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaTextLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaTextLiteral([NotNull] MParser.JavaTextLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaTextLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaTextLiteral([NotNull] MParser.JavaTextLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaBooleanLiteral([NotNull] MParser.JavaBooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaBooleanLiteral([NotNull] MParser.JavaBooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JavaCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJavaCharacterLiteral([NotNull] MParser.JavaCharacterLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JavaCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.java_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJavaCharacterLiteral([NotNull] MParser.JavaCharacterLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.java_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_identifier([NotNull] MParser.Java_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.java_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_identifier([NotNull] MParser.Java_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpReturnStatement</c>
	/// labeled alternative in <see cref="MParser.csharp_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpReturnStatement([NotNull] MParser.CSharpReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpReturnStatement</c>
	/// labeled alternative in <see cref="MParser.csharp_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpReturnStatement([NotNull] MParser.CSharpReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpStatement</c>
	/// labeled alternative in <see cref="MParser.csharp_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpStatement([NotNull] MParser.CSharpStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpStatement</c>
	/// labeled alternative in <see cref="MParser.csharp_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpStatement([NotNull] MParser.CSharpStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpSelectorExpression([NotNull] MParser.CSharpSelectorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpSelectorExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpSelectorExpression([NotNull] MParser.CSharpSelectorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpPrimaryExpression([NotNull] MParser.CSharpPrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpPrimaryExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpPrimaryExpression([NotNull] MParser.CSharpPrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_primary_expression([NotNull] MParser.Csharp_primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_primary_expression([NotNull] MParser.Csharp_primary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_this_expression([NotNull] MParser.Csharp_this_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_this_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_this_expression([NotNull] MParser.Csharp_this_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_new_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_new_expression([NotNull] MParser.Csharp_new_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_new_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_new_expression([NotNull] MParser.Csharp_new_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpMethodExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpMethodExpression([NotNull] MParser.CSharpMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpMethodExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpMethodExpression([NotNull] MParser.CSharpMethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpItemExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpItemExpression([NotNull] MParser.CSharpItemExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpItemExpression</c>
	/// labeled alternative in <see cref="MParser.csharp_selector_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpItemExpression([NotNull] MParser.CSharpItemExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_method_expression([NotNull] MParser.Csharp_method_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_method_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_method_expression([NotNull] MParser.Csharp_method_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpArgumentList</c>
	/// labeled alternative in <see cref="MParser.csharp_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpArgumentList([NotNull] MParser.CSharpArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpArgumentList</c>
	/// labeled alternative in <see cref="MParser.csharp_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpArgumentList([NotNull] MParser.CSharpArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.csharp_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpArgumentListItem([NotNull] MParser.CSharpArgumentListItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpArgumentListItem</c>
	/// labeled alternative in <see cref="MParser.csharp_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpArgumentListItem([NotNull] MParser.CSharpArgumentListItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_item_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_item_expression([NotNull] MParser.Csharp_item_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_item_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_item_expression([NotNull] MParser.Csharp_item_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_parenthesis_expression([NotNull] MParser.Csharp_parenthesis_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_parenthesis_expression([NotNull] MParser.Csharp_parenthesis_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpIdentifier</c>
	/// labeled alternative in <see cref="MParser.csharp_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpIdentifier([NotNull] MParser.CSharpIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpIdentifier</c>
	/// labeled alternative in <see cref="MParser.csharp_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpIdentifier([NotNull] MParser.CSharpIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpChildIdentifier</c>
	/// labeled alternative in <see cref="MParser.csharp_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpChildIdentifier([NotNull] MParser.CSharpChildIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpChildIdentifier</c>
	/// labeled alternative in <see cref="MParser.csharp_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpChildIdentifier([NotNull] MParser.CSharpChildIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpPromptoIdentifier</c>
	/// labeled alternative in <see cref="MParser.csharp_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpPromptoIdentifier([NotNull] MParser.CSharpPromptoIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpPromptoIdentifier</c>
	/// labeled alternative in <see cref="MParser.csharp_identifier_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpPromptoIdentifier([NotNull] MParser.CSharpPromptoIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpIntegerLiteral([NotNull] MParser.CSharpIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpIntegerLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpIntegerLiteral([NotNull] MParser.CSharpIntegerLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpDecimalLiteral([NotNull] MParser.CSharpDecimalLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpDecimalLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpDecimalLiteral([NotNull] MParser.CSharpDecimalLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpTextLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpTextLiteral([NotNull] MParser.CSharpTextLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpTextLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpTextLiteral([NotNull] MParser.CSharpTextLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpBooleanLiteral([NotNull] MParser.CSharpBooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpBooleanLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpBooleanLiteral([NotNull] MParser.CSharpBooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CSharpCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCSharpCharacterLiteral([NotNull] MParser.CSharpCharacterLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CSharpCharacterLiteral</c>
	/// labeled alternative in <see cref="MParser.csharp_literal_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCSharpCharacterLiteral([NotNull] MParser.CSharpCharacterLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.csharp_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCsharp_identifier([NotNull] MParser.Csharp_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.csharp_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCsharp_identifier([NotNull] MParser.Csharp_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_expression([NotNull] MParser.Jsx_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_expression([NotNull] MParser.Jsx_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxSelfClosing</c>
	/// labeled alternative in <see cref="MParser.jsx_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxSelfClosing([NotNull] MParser.JsxSelfClosingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxSelfClosing</c>
	/// labeled alternative in <see cref="MParser.jsx_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxSelfClosing([NotNull] MParser.JsxSelfClosingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxElement</c>
	/// labeled alternative in <see cref="MParser.jsx_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxElement([NotNull] MParser.JsxElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxElement</c>
	/// labeled alternative in <see cref="MParser.jsx_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxElement([NotNull] MParser.JsxElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_fragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_fragment([NotNull] MParser.Jsx_fragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_fragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_fragment([NotNull] MParser.Jsx_fragmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_fragment_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_fragment_start([NotNull] MParser.Jsx_fragment_startContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_fragment_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_fragment_start([NotNull] MParser.Jsx_fragment_startContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_fragment_end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_fragment_end([NotNull] MParser.Jsx_fragment_endContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_fragment_end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_fragment_end([NotNull] MParser.Jsx_fragment_endContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_self_closing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_self_closing([NotNull] MParser.Jsx_self_closingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_self_closing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_self_closing([NotNull] MParser.Jsx_self_closingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_opening"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_opening([NotNull] MParser.Jsx_openingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_opening"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_opening([NotNull] MParser.Jsx_openingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_closing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_closing([NotNull] MParser.Jsx_closingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_closing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_closing([NotNull] MParser.Jsx_closingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_element_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_element_name([NotNull] MParser.Jsx_element_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_element_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_element_name([NotNull] MParser.Jsx_element_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_identifier([NotNull] MParser.Jsx_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_identifier([NotNull] MParser.Jsx_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_attribute([NotNull] MParser.Jsx_attributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_attribute([NotNull] MParser.Jsx_attributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxLiteral</c>
	/// labeled alternative in <see cref="MParser.jsx_attribute_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxLiteral([NotNull] MParser.JsxLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxLiteral</c>
	/// labeled alternative in <see cref="MParser.jsx_attribute_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxLiteral([NotNull] MParser.JsxLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxValue</c>
	/// labeled alternative in <see cref="MParser.jsx_attribute_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxValue([NotNull] MParser.JsxValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxValue</c>
	/// labeled alternative in <see cref="MParser.jsx_attribute_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxValue([NotNull] MParser.JsxValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_children"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_children([NotNull] MParser.Jsx_childrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_children"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_children([NotNull] MParser.Jsx_childrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxText</c>
	/// labeled alternative in <see cref="MParser.jsx_child"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxText([NotNull] MParser.JsxTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxText</c>
	/// labeled alternative in <see cref="MParser.jsx_child"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxText([NotNull] MParser.JsxTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxChild</c>
	/// labeled alternative in <see cref="MParser.jsx_child"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxChild([NotNull] MParser.JsxChildContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxChild</c>
	/// labeled alternative in <see cref="MParser.jsx_child"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxChild([NotNull] MParser.JsxChildContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsxCode</c>
	/// labeled alternative in <see cref="MParser.jsx_child"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsxCode([NotNull] MParser.JsxCodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsxCode</c>
	/// labeled alternative in <see cref="MParser.jsx_child"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsxCode([NotNull] MParser.JsxCodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_text([NotNull] MParser.Jsx_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_text([NotNull] MParser.Jsx_textContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jsx_char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsx_char([NotNull] MParser.Jsx_charContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jsx_char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsx_char([NotNull] MParser.Jsx_charContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.css_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCss_expression([NotNull] MParser.Css_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.css_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCss_expression([NotNull] MParser.Css_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.css_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCss_field([NotNull] MParser.Css_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.css_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCss_field([NotNull] MParser.Css_fieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.css_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCss_identifier([NotNull] MParser.Css_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.css_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCss_identifier([NotNull] MParser.Css_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CssValue</c>
	/// labeled alternative in <see cref="MParser.css_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCssValue([NotNull] MParser.CssValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CssValue</c>
	/// labeled alternative in <see cref="MParser.css_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCssValue([NotNull] MParser.CssValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CssText</c>
	/// labeled alternative in <see cref="MParser.css_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCssText([NotNull] MParser.CssTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CssText</c>
	/// labeled alternative in <see cref="MParser.css_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCssText([NotNull] MParser.CssTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.css_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCss_text([NotNull] MParser.Css_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.css_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCss_text([NotNull] MParser.Css_textContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace prompto.parser
